Instructions to setup a new MVC project with a database and CRUD capabilities:

dotnet new mvc --no-https
- Adding Entity FrameWork Core:
dotnet add package Pomelo.EntityFrameworkCore.MySql --version 3.1.1
dotnet add package Microsoft.EntityFrameworkCore.Design --version 3.1.5

- setup database table Model(s)
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace ChefsNDishes.Models
{
    public class Chef
    {
        [Key]
        public int chefId {get;set;}
        public string name {get;set;}
        public int age {get;set;}
        public List<Dish> dishes {get;set;}
        public DateTime CreatedAt {get;set;} = DateTime.Now;
        public DateTime UpdatedAt {get;set;} = DateTime.Now;
    }
}

- setup a context class to link table models to the database
using Microsoft.EntityFrameworkCore;

namespace ChefsNDishes.Models
{
    public class MyContext : DbContext
    {
        public MyContext(DbContextOptions options) : base(options) {}
        public DbSet<Chef> Chefs {get;set;}
        public DbSet<Dish> Dishes {get;set;}
        
    }
}

- Setup and secure the connection string (use git ignore), add lines to appsettings.json:
"AllowedHosts": "*",
    "DBInfo":
    {
        "Name": "MySQLconnect",
        "ConnectionString": "server=localhost;userid=root;password=root;port=3306;database=[your db name here, ignore the [] ];SslMode=None"
    }

- startup.cs:

using [namespace].Models
using Microsoft.EntityFrameworkCore;

    public void ConfigureServices (IServiceCollection services)
        {
            services.AddDbContext<MyContext>(options => options.UseMySql (Configuration["DBInfo:ConnectionString"]));
            services.AddMvc(options => options.EnableEndpointRouting = false);
        }

- HomeController:

using Microsoft.EntityFrameworkCore;

private MyContext _context;

public HomeController(MyContext context)
        {
            _context = context;
        }

- Migrations
dotnet ef migrations add FirstMigration
dotnet ef database update

